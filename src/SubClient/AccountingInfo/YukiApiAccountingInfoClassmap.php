<?php

namespace MaartenDeBlock\YukiApiClient\SubClient\AccountingInfo;

use MaartenDeBlock\YukiApiClient\SubClient\AccountingInfo\Type;
use Soap\ExtSoapEngine\Configuration\ClassMap\ClassMapCollection;
use Soap\ExtSoapEngine\Configuration\ClassMap\ClassMap;

class YukiApiAccountingInfoClassmap
{
    public static function getCollection() : \Soap\ExtSoapEngine\Configuration\ClassMap\ClassMapCollection
    {
        return new ClassMapCollection(
            new ClassMap('ArrayOfGlAccount', Type\ArrayOfGlAccount::class),
            new ClassMap('GlAccount', Type\GlAccount::class),
            new ClassMap('ArrayOfPaymentMethod', Type\ArrayOfPaymentMethod::class),
            new ClassMap('PaymentMethod', Type\PaymentMethod::class),
            new ClassMap('ArrayOfRGSEntry', Type\ArrayOfRGSEntry::class),
            new ClassMap('RGSEntry', Type\RGSEntry::class),
            new ClassMap('AdministrationPeriod', Type\AdministrationPeriod::class),
            new ClassMap('ArrayOfAccountStartBalance', Type\ArrayOfAccountStartBalance::class),
            new ClassMap('AccountStartBalance', Type\AccountStartBalance::class),
            new ClassMap('ArrayOfTransactionInfo', Type\ArrayOfTransactionInfo::class),
            new ClassMap('TransactionInfo', Type\TransactionInfo::class),
            new ClassMap('TransactionDocument', Type\TransactionDocument::class),
            new ClassMap('ArrayOfContactDefaultValues', Type\ArrayOfContactDefaultValues::class),
            new ClassMap('ContactDefaultValues', Type\ContactDefaultValues::class),
            new ClassMap('ArrayOfDefaultValue', Type\ArrayOfDefaultValue::class),
            new ClassMap('DefaultValue', Type\DefaultValue::class),
            new ClassMap('InputFields', Type\InputFields::class),
            new ClassMap('OutputFields', Type\OutputFields::class),
            new ClassMap('ArrayOfTransactionSearch', Type\ArrayOfTransactionSearch::class),
            new ClassMap('TransactionSearch', Type\TransactionSearch::class),
            new ClassMap('ArrayOfTransaction', Type\ArrayOfTransaction::class),
            new ClassMap('Transaction', Type\Transaction::class),
            new ClassMap('Contact', Type\Contact::class),
            new ClassMap('Document', Type\Document::class),
            new ClassMap('DocumentProcessed', Type\DocumentProcessed::class),
            new ClassMap('DocumentMatched', Type\DocumentMatched::class),
            new ClassMap('ForeignCurrency', Type\ForeignCurrency::class),
            new ClassMap('VAT', Type\VAT::class),
            new ClassMap('ProjectInfo', Type\ProjectInfo::class),
            new ClassMap('ArrayOfProjectBalance', Type\ArrayOfProjectBalance::class),
            new ClassMap('ProjectBalance', Type\ProjectBalance::class),
            new ClassMap('ArrayOfProject', Type\ArrayOfProject::class),
            new ClassMap('Project', Type\Project::class),
            new ClassMap('GetGLAccountScheme', Type\GetGLAccountScheme::class),
            new ClassMap('GetGLAccountSchemeResponse', Type\GetGLAccountSchemeResponse::class),
            new ClassMap('GetCustomPaymentMethods', Type\GetCustomPaymentMethods::class),
            new ClassMap('GetCustomPaymentMethodsResponse', Type\GetCustomPaymentMethodsResponse::class),
            new ClassMap('GetRGSScheme', Type\GetRGSScheme::class),
            new ClassMap('GetRGSSchemeResponse', Type\GetRGSSchemeResponse::class),
            new ClassMap('GetPeriodDateTable', Type\GetPeriodDateTable::class),
            new ClassMap('GetPeriodDateTableResponse', Type\GetPeriodDateTableResponse::class),
            new ClassMap('GetFinancialYearModifiedDate', Type\GetFinancialYearModifiedDate::class),
            new ClassMap('GetFinancialYearModifiedDateResponse', Type\GetFinancialYearModifiedDateResponse::class),
            new ClassMap('GetStartBalanceByGlAccount', Type\GetStartBalanceByGlAccount::class),
            new ClassMap('GetStartBalanceByGlAccountResponse', Type\GetStartBalanceByGlAccountResponse::class),
            new ClassMap('GetTransactionDetails', Type\GetTransactionDetails::class),
            new ClassMap('GetTransactionDetailsResponse', Type\GetTransactionDetailsResponse::class),
            new ClassMap('GetTransactionDocument', Type\GetTransactionDocument::class),
            new ClassMap('GetTransactionDocumentResponse', Type\GetTransactionDocumentResponse::class),
            new ClassMap('GetContactDefaultValues', Type\GetContactDefaultValues::class),
            new ClassMap('GetContactDefaultValuesResponse', Type\GetContactDefaultValuesResponse::class),
            new ClassMap('GetTransactions', Type\GetTransactions::class),
            new ClassMap('GetTransactionsResponse', Type\GetTransactionsResponse::class),
            new ClassMap('GetProjectBalance', Type\GetProjectBalance::class),
            new ClassMap('GetProjectBalanceResponse', Type\GetProjectBalanceResponse::class),
            new ClassMap('GetProjects', Type\GetProjects::class),
            new ClassMap('GetProjectsResponse', Type\GetProjectsResponse::class),
            new ClassMap('GetProjectsAndID', Type\GetProjectsAndID::class),
            new ClassMap('GetProjectsAndIDResponse', Type\GetProjectsAndIDResponse::class),
            new ClassMap('Authenticate', Type\Authenticate::class),
            new ClassMap('AuthenticateResponse', Type\AuthenticateResponse::class),
            new ClassMap('AuthenticateClient', Type\AuthenticateClient::class),
            new ClassMap('AuthenticateClientResponse', Type\AuthenticateClientResponse::class),
            new ClassMap('AuthenticateByUserName', Type\AuthenticateByUserName::class),
            new ClassMap('AuthenticateByUserNameResponse', Type\AuthenticateByUserNameResponse::class),
            new ClassMap('Domains', Type\Domains::class),
            new ClassMap('DomainsResponse', Type\DomainsResponse::class),
            new ClassMap('DomainsResult', Type\DomainsResult::class),
            new ClassMap('Companies', Type\Companies::class),
            new ClassMap('CompaniesResponse', Type\CompaniesResponse::class),
            new ClassMap('CompaniesResult', Type\CompaniesResult::class),
            new ClassMap('AdministrationID', Type\AdministrationID::class),
            new ClassMap('AdministrationIDResponse', Type\AdministrationIDResponse::class),
            new ClassMap('Administrations', Type\Administrations::class),
            new ClassMap('AdministrationsResponse', Type\AdministrationsResponse::class),
            new ClassMap('AdministrationsResult', Type\AdministrationsResult::class),
            new ClassMap('GetCurrentDomain', Type\GetCurrentDomain::class),
            new ClassMap('GetCurrentDomainResponse', Type\GetCurrentDomainResponse::class),
            new ClassMap('GetCurrentDomainResult', Type\GetCurrentDomainResult::class),
            new ClassMap('SetCurrentDomain', Type\SetCurrentDomain::class),
            new ClassMap('SetCurrentDomainResponse', Type\SetCurrentDomainResponse::class),
            new ClassMap('Language', Type\Language::class),
            new ClassMap('LanguageResponse', Type\LanguageResponse::class),
            new ClassMap('SupportedLanguages', Type\SupportedLanguages::class),
            new ClassMap('SupportedLanguagesResponse', Type\SupportedLanguagesResponse::class),
            new ClassMap('SupportedLanguagesResult', Type\SupportedLanguagesResult::class),
            new ClassMap('SetLanguage', Type\SetLanguage::class),
            new ClassMap('SetLanguageResponse', Type\SetLanguageResponse::class),
        );
    }
}

